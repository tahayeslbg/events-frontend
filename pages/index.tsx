import type { NextPage } from "next";
import Head from "next/head";
import { QueryClient, dehydrate, useQuery } from "@tanstack/react-query";
import {
	dateEvents,
	getCategories,
	getEvents,
	getMe,
	placeEvents,
	searchEvents,
} from "../src/utils/fetchData";
import { useState } from "react";
import Container from "../src/containers/Container";

export const Home: NextPage = () => {
	const [search, setSearch] = useState<string>("");
	const [data, setData] = useState();
	const [myTickets, setMyTickets] = useState([""]);
	const [place, setPlace] = useState<string>("");
	const [date, setDate] = useState<string>("");
	useQuery(["events", search], {
		queryFn: async search => {
			const newData = await searchEvents(search.queryKey[1]);
			setData(newData);
		},
	});

	useQuery(["events", place], {
		queryFn: async place => {
			const newData = await placeEvents(place.queryKey[1]);
			setData(newData);
		},
	});
	useQuery(["events", date], {
		queryFn: async date => {
			const newData = await dateEvents(date.queryKey[1]);
			setData(newData);
		},
	});

	useQuery(["events"], {
		queryFn: async () => {
			const newData = await getEvents();
			setData(newData);
		},

		refetchOnWindowFocus: false,
		cacheTime: 60000,
	});

	useQuery(["me"], {
		queryFn: async () => {
			const meData = await getMe();
			setMyTickets(meData.tickets);
		},
	});

	return (
		<>
			<Head>
				<title>Challenge | Anasayfa</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Container
				data={data}
				date={date}
				place={place}
				search={search}
				setDate={setDate}
				setPlace={setPlace}
				setSearch={setSearch}
				myTickets={myTickets}
				setMyTickets={setMyTickets}
			/>
		</>
	);
};

export const getServerSideProps = async () => {
	const queryClient = new QueryClient();

	await queryClient.prefetchQuery(["categories"], getCategories, {
		staleTime: 60000,
	});

	await queryClient.prefetchQuery(["events"], getEvents, {
		staleTime: 60000,
	});

	await queryClient.prefetchQuery(["me"], getMe);
	return {
		props: {
			dehydratedState: dehydrate(queryClient),
		},
	};
};

export default Home;
